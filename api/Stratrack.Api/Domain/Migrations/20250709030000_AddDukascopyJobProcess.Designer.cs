// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stratrack.Api.Domain;

#nullable disable

namespace Stratrack.Api.Domain.Migrations
{
    [DbContext(typeof(StratrackDbContext))]
    [Migration("20250709030000_AddDukascopyJobProcess")]
    partial class AddDukascopyJobProcess
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stratrack.Api.Domain.Dukascopy.DukascopyJobReadModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("DataSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcessing")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("bit");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("LastProcessFinishedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastProcessError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastProcessStartedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("LastProcessSucceeded")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("DukascopyJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
